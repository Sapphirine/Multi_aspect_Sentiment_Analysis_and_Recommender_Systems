{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ti",
				"time1"
			],
			[
				"hel",
				"helper1〔variable〕"
			],
			[
				"spabu",
				"spark_build_ones_block_matrix〔function〕"
			],
			[
				"par",
				"partition_num〔variable〕"
			],
			[
				"col",
				"col_indexes"
			],
			[
				"m_",
				"m_partition"
			],
			[
				"userid",
				"user_id〔variable〕"
			],
			[
				"userdi",
				"user_id〔variable〕"
			],
			[
				"users",
				"user_set"
			],
			[
				"resta",
				"restaurant_dic〔variable〕"
			],
			[
				"user",
				"user_dic〔argument〕"
			],
			[
				"res",
				"restaurant_id"
			],
			[
				"bandi",
				"bandIds〔variable〕"
			],
			[
				"vali",
				"validBandIds〔variable〕"
			],
			[
				"valdi",
				"validBandIds〔variable〕"
			],
			[
				"gig",
				"gigeventDate〔variable〕"
			],
			[
				"gi",
				"gigeventDate"
			],
			[
				"ven",
				"venueId〔variable〕"
			],
			[
				"usera",
				"userApps〔argument〕"
			],
			[
				"coor",
				"coorperatedBandDic"
			],
			[
				"coo",
				"coorperatedBandDic"
			],
			[
				"fol",
				"foldList"
			],
			[
				"print",
				"print_endline"
			],
			[
				"String",
				"StringMap"
			],
			[
				"word",
				"wordsMap"
			],
			[
				"Stri",
				"StringMap"
			],
			[
				"erro",
				"error_rates"
			],
			[
				"num_o",
				"num_points"
			],
			[
				"devi",
				"deviations〔argument〕"
			],
			[
				"errorate",
				"error_rates"
			],
			[
				"sel",
				"sel_indexes"
			],
			[
				"nump",
				"num_point〔argument〕"
			],
			[
				"inde",
				"indexes〔variable〕"
			],
			[
				"sor",
				"sorted_distance〔variable〕"
			],
			[
				"dis",
				"distance_matrix"
			],
			[
				"E",
				"EuclideanDistance"
			],
			[
				"squa",
				"square_matrix_a"
			],
			[
				"num_p",
				"num_points"
			],
			[
				"err",
				"error_rates〔variable〕"
			],
			[
				"num_po",
				"num_points〔variable〕"
			],
			[
				"testla",
				"test_labels"
			],
			[
				"classifi",
				"classified_labels"
			],
			[
				"cla",
				"classified_labels〔variable〕"
			],
			[
				"ind",
				"indexes〔variable〕"
			],
			[
				"dista",
				"distance_matrix〔variable〕"
			],
			[
				"tran",
				"transpose"
			],
			[
				"get_sq",
				"get_square_test_data〔function〕"
			],
			[
				"trani",
				"traninig_data"
			],
			[
				"sum",
				"sum_matrix〔variable〕"
			],
			[
				"testda",
				"test_data〔argument〕"
			],
			[
				"trai",
				"training_data〔variable〕"
			],
			[
				"lab",
				"labels"
			],
			[
				"tra",
				"training_labels〔variable〕"
			],
			[
				"min",
				"min_index"
			],
			[
				"po",
				"points"
			],
			[
				"nu",
				"num_points"
			],
			[
				"eror",
				"error_rate"
			],
			[
				"test",
				"test_labels〔variable〕"
			],
			[
				"seltra",
				"sel_training_labels"
			],
			[
				"get",
				"get_random_n_points"
			],
			[
				"training",
				"training_labels"
			],
			[
				"mark",
				"marked_dic〔variable〕"
			],
			[
				"mar",
				"marked_dic"
			],
			[
				"vert",
				"vertice"
			],
			[
				"ver",
				"vertice〔argument〕"
			],
			[
				"top",
				"topology_order"
			],
			[
				"to",
				"topology_order"
			],
			[
				"verti",
				"vertices"
			],
			[
				"vis",
				"visited_vertices"
			],
			[
				"back",
				"back_edges"
			],
			[
				"vi",
				"visited_vertices"
			],
			[
				"dfs",
				"dfs_node"
			],
			[
				"dir",
				"directed_vertices"
			],
			[
				"best",
				"best_arr〔variable〕"
			],
			[
				"tm",
				"tmp_arr"
			],
			[
				"len",
				"length"
			],
			[
				"mat",
				"match_left〔function〕"
			],
			[
				"te",
				"test_dict"
			],
			[
				"lef",
				"left_child_index"
			],
			[
				"le",
				"left_child_index"
			],
			[
				"righ",
				"right_child_index"
			],
			[
				"pa",
				"parent_index"
			],
			[
				"EN",
				"ENTITY_TYPE_ATTRACTION〔module〕"
			],
			[
				"ENTT",
				"ENTITY_TYPE_TRANSPORT"
			],
			[
				"ENTITYT",
				"ENTITY_TYPE_TRANSPORT〔variable〕"
			],
			[
				"ENTI",
				"ENTITY_TYPE_RIDE〔variable〕"
			],
			[
				"ENT",
				"ENTITY_TYPE_ATTRACTION〔variable〕"
			],
			[
				"asnot",
				"assertNotEqual〔function〕"
			],
			[
				"dat",
				"datetime"
			],
			[
				"cr",
				"create_operating_calendar_date_item〔function〕"
			],
			[
				"opc",
				"operating_calendar_date_item"
			],
			[
				"opda",
				"operating_calendar_date_item"
			],
			[
				"creat",
				"create_operating_calendar〔function〕"
			],
			[
				"gelo",
				"get_local_date〔module〕"
			],
			[
				"oper",
				"operating_calendar〔variable〕"
			],
			[
				"O",
				"OperatingCalendarDateItem〔class〕"
			],
			[
				"dapvi",
				"dap_view_date"
			],
			[
				"dap",
				"dap_view_date"
			],
			[
				"dap_veiw",
				"dap_view_change_list"
			],
			[
				"Dav",
				"DapViewAdmin〔class〕"
			],
			[
				"rela",
				"related_obj"
			],
			[
				"ENclo",
				"EntityCloseTimeManager〔class〕"
			],
			[
				"hou",
				"hourly_period_vs_park_att_percentage"
			],
			[
				"upda",
				"update_time〔argument〕"
			],
			[
				"H",
				"HourlyTotalATT〔class〕"
			],
			[
				"ca",
				"capacity_percentage_obj"
			],
			[
				"cap",
				"capacity_percentage_obj"
			],
			[
				"S",
				"ShowVsParkATTPercentage〔class〕"
			],
			[
				"ope",
				"operation_times〔variable〕"
			],
			[
				"C",
				"CacheTimeDataCalculator〔class〕"
			],
			[
				"star",
				"start_time"
			],
			[
				"operhou",
				"operation_hours"
			],
			[
				"trasp",
				"transportations〔variable〕"
			],
			[
				"en",
				"entity"
			],
			[
				"ent",
				"entities"
			],
			[
				"Inser",
				"InputEntityListSerializer〔module〕"
			],
			[
				"enti",
				"entity"
			],
			[
				"A",
				"ATT_INPUT_TYPE_TOOL〔variable〕"
			],
			[
				"Acoper",
				"ActivityOperationSerializer〔module〕"
			],
			[
				"ac",
				"activity_constructions"
			],
			[
				"bo",
				"booking_status"
			],
			[
				"fil",
				"filter"
			],
			[
				"Re",
				"Restaurant〔class〕"
			],
			[
				"getloca",
				"get_local_date_time〔module〕"
			],
			[
				"entili",
				"entities_list〔variable〕"
			],
			[
				"Entitlis",
				"EntityListSerializer〔module〕"
			],
			[
				"Cap",
				"CapacityPercentageManager〔class〕"
			],
			[
				"ret",
				"retrieve_num〔argument〕"
			]
		]
	},
	"buffers":
	[
		{
			"file": "preprocessing/col_filter.py",
			"settings":
			{
				"buffer_size": 10041,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "{\n	\"folders\":\n	[\n		{\n			\"path\": \"/Users/zhangjia/Projects/big_data_project\"\n		}\n	]\n}\n",
			"file": "big_data_project.sublime-project",
			"file_size": 85,
			"file_write_time": 131263741730000000,
			"settings":
			{
				"buffer_size": 85,
				"line_ending": "Unix"
			}
		},
		{
			"file": "preprocessing/get_uv.py",
			"settings":
			{
				"buffer_size": 3466,
				"line_ending": "Unix"
			}
		},
		{
			"file": "preprocessing/extract_data.py",
			"settings":
			{
				"buffer_size": 5095,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "[(u 'foods,', 0.7954785823822021), (u 'dishes', 0.78708416223526), (u 'delicacies', 0.7767311334609985), (u 'cuisines', 0.772077202796936), (u 'menu_items', 0.7621040940284729), (u 'items', 0.7488788962364197), (u 'offerings', 0.721508264541626), (u 'goods', 0.718328595161438), (u 'specialties', 0.7045503258705139), (u 'products', 0.6989568471908569), (u 'meats', 0.6969394683837891), (u 'ingrediants', 0.69402015209198), (u 'ethnic_foods', 0.6935859322547913), (u 'foods.', 0.6921957731246948), (u 'fishes', 0.6889744400978088), (u 'ingredients', 0.6856353282928467), (u 'Asian_cuisines', 0.6781914234161377), (u 'specialities', 0.675193190574646), (u 'staples', 0.674380898475647), (u 'dishes,', 0.673665463924408), (u 'fare', 0.6709086894989014), (u 'pasties', 0.669867217540741), (u 'Asian_foods', 0.6697955131530762), (u 'cuisines,', 0.668740451335907), (u 'cuisine', 0.6686495542526245), (u 'delights', 0.6683667302131653), (u 'foodstuffs', 0.6674168109893799), (u 'comfort_foods', 0.6662138104438782), (u 'noodle_dishes', 0.6651724576950073), (u 'classics', 0.6637041568756104), (u 'goodies', 0.6615594625473022), (u 'cuisines.', 0.6589025855064392), (u 'curries', 0.656380295753479), (u 'stuff', 0.6562788486480713), (u 'proteins', 0.6560680866241455), (u 'different_cuisines', 0.6556687355041504), (u 'selections', 0.6554351449012756), (u 'sushi_rolls', 0.6531448364257812), (u 'baked_goods', 0.652857780456543), (u 'pastries', 0.6523215770721436), (u 'wing_sauces', 0.6447333097457886), (u 'gourmet_burgers', 0.6436091661453247), (u 'possibilities', 0.6358053684234619), (u 'items,', 0.6355308294296265), (u 'specialty_rolls', 0.6341437101364136), (u 'pastys', 0.6335004568099976), (u 'delicacies.', 0.6333255171775818), (u 'desserts', 0.6328370571136475), (u 'things', 0.6322727203369141), (u 'sweets', 0.6313163042068481)]\n\n\n\n[(u'waiters', 0.9767134189605713), (u'waitresses', 0.9515680074691772), (u'employees', 0.8938285112380981), (u'bartenders', 0.8894176483154297), (u'waiters/waitresses', 0.883272111415863), (u'waitstaff', 0.8762153387069702), (u'wait_staff', 0.8738226890563965), (u'hostesses', 0.873103678226471), (u'workers', 0.870497465133667), (u'severs', 0.8684674501419067), (u'cashiers', 0.8653703927993774), (u'staff_members', 0.8604635000228882), (u'sushi_chefs', 0.8408068418502808), (u'bar_tenders', 0.8382288813591003), (u'hosts', 0.835732102394104), (u'staffs', 0.8310696482658386), (u'staff', 0.8253682255744934), (u'managers', 0.819232165813446), (u'servers,', 0.8107327222824097), (u'baristas', 0.7991149425506592), (u'bussers', 0.7972517013549805), (u'busboys', 0.7837752103805542), (u'wait-staff', 0.777972400188446), (u'food_runners', 0.7750686407089233), (u'female_bartenders', 0.7711973786354065), (u'attendants', 0.7693907022476196), (u'bouncers', 0.7650217413902283), (u'servers/bartenders', 0.7592333555221558), (u'staffers', 0.7587090730667114), (u'greeters', 0.7523537874221802), (u'waiters,', 0.7506062388420105), (u'runners', 0.7496759295463562), (u'bus_boys', 0.7493762969970703), (u'clerks', 0.7483842372894287), (u'female_servers', 0.7426995635032654), (u'chefs', 0.7283111810684204), (u'male_servers', 0.7163089513778687), (u'people_working', 0.7154293656349182), (u'ladies', 0.7142568826675415), (u'delivery_drivers', 0.7131726741790771), (u'bartenders,', 0.7115887403488159), (u'employees,', 0.7091262340545654), (u'bartenders/servers', 0.7077592611312866), (u'order_takers', 0.7071065902709961), (u'Hostesses', 0.7061905264854431), (u'Waitresses', 0.7059994339942932), (u'women_working', 0.7048040628433228), (u'employes', 0.7043552994728088), (u'Bartenders', 0.7026811838150024), (u'male_bartenders', 0.6994662880897522)]\n\n\n[(u'ambiance', 0.9895791411399841), (u'atmosphere', 0.9585488438606262), (u'decor', 0.8903900980949402), (u'environment', 0.8788561820983887), (u'scenery', 0.8378654718399048), (u'interior_decor', 0.83607017993927), (u'decore', 0.8344095945358276), (u'd\\xe9cor', 0.8322621583938599), (u'interior_design', 0.8131957054138184), (u'atmostphere', 0.8062058091163635), (u'atmospher', 0.7898628115653992), (u'ambiance,', 0.7892997860908508), (u'Ambiance', 0.7812735438346863), (u'overall_vibe', 0.7790419459342957), (u'interior', 0.7776463031768799), (u'vibe', 0.7752417922019958), (u'decoration', 0.762701153755188), (u'atmosphere,', 0.7532340288162231), (u'atmoshpere', 0.7523225545883179), (u'layout', 0.7501662969589233), (u'Ambience', 0.7495245933532715), (u'setting', 0.7492548227310181), (u'atmoshere', 0.7465720176696777), (u\"restaurant's_decor\", 0.7462671399116516), (u'ambience,', 0.7376613616943359), (u'space_itself', 0.7339574098587036), (u'Atmosphere', 0.7333754301071167), (u'surroundings', 0.7301898002624512), (u'lighting', 0.7291593551635742), (u'atomsphere', 0.7260686159133911), (u'restaurant_itself', 0.7198518514633179), (u'atomosphere', 0.7185063362121582), (u'ambient', 0.7175407409667969), (u'decor,', 0.715815544128418), (u'enviroment', 0.7136175036430359), (u'deco', 0.7113028764724731), (u'Vibe', 0.7105634212493896), (u'Environment', 0.7093684077262878), (u'venue_itself', 0.7078189849853516), (u'Decor', 0.7072265148162842), (u'contemporary_decor', 0.7052351236343384), (u'relaxed_atmosphere', 0.7014700174331665), (u'atmosphere/decor', 0.6995563507080078), (u'building_itself', 0.6992182731628418), (u'atmosphere;', 0.6992082595825195), (u'Setting', 0.6978216171264648), (u'interior_decoration', 0.6963160037994385), (u'modern_decor', 0.6959391832351685), (u'relaxing_atmosphere', 0.6939411163330078), (u'architecture', 0.6927964091300964)]\n\n\n[(u'pricey', 0.9429149627685547), (u'expensive', 0.9087843894958496), (u'pricey,', 0.8833751082420349), (u'costly', 0.862791895866394), (u'expensive,', 0.862082302570343), (u'spendy', 0.8448892831802368), (u'pricy,', 0.8221745491027832), (u'bit_pricey', 0.7671900987625122), (u'overpriced', 0.7667885422706604), (u'kinda_pricey', 0.7533864974975586), (u'over_priced', 0.7524172067642212), (u'over-priced', 0.7508862614631653), (u'steep', 0.7468652129173279), (u'little_pricey', 0.7403309345245361), (u'slightly_overpriced', 0.7312372326850891), (u'expensive...', 0.728481650352478), (u'bit_pricy', 0.7257446646690369), (u'expensive..', 0.7184867858886719), (u'costly,', 0.7124350070953369), (u'ridiculously_overpriced', 0.7088849544525146), (u'spendy,', 0.7086035013198853), (u'little_pricy', 0.6938251852989197), (u'overpriced,', 0.6926298141479492), (u'over_priced,', 0.6911336183547974), (u'cheap', 0.6900086402893066), (u'fairly_priced', 0.6873752474784851), (u'decently_priced', 0.686303436756134), (u'disappointing,_especially', 0.6806296110153198), (u'bit_pricey,', 0.6766392588615417), (u'steep,', 0.6745983362197876), (u'pricey!', 0.6737872958183289), (u'pricey.', 0.6719993352890015), (u'ridiculously_expensive', 0.67093425989151), (u'little_pricey,', 0.66961669921875), (u'tad_overpriced', 0.6657339334487915), (u'reasonably_priced', 0.6651142835617065), (u'pricey...', 0.6646015048027039), (u'pricy.', 0.660265326499939), (u'kinda_pricy', 0.6510872840881348), (u'inexpensive', 0.6507022380828857), (u'WAY_overpriced', 0.6490601897239685), (u'bit_pricy,', 0.6477513313293457), (u'pricey-', 0.645826518535614), (u'lil_pricey', 0.6435834169387817), (u'tad_pricey', 0.6354791522026062), (u'bit_spendy', 0.63303542137146), (u'overrated', 0.6285178661346436), (u'grossly_overpriced', 0.6283871531486511), (u'pricier_side', 0.6272778511047363), (u'pricey_side,', 0.6248786449432373)]\n\n\n\nfoods, dishes delicacies cuisines menu_items items offerings goods specialties products meats ingrediants ethnic_foods foods. fishes ingredients Asian_cuisines specialities staples dishes, fare pasties Asian_foods cuisines, cuisine delights foodstuffs comfort_foods noodle_dishes classics goodies cuisines. curries stuff proteins different_cuisines selections sushi_rolls baked_goods pastries wing_sauces gourmet_burgers possibilities items, specialty_rolls pastys delicacies. desserts things sweets\n\nwaiters waitresses employees bartenders waiters/waitresses waitstaff wait_staff hostesses workers severs cashiers staff_members sushi_chefs bar_tenders hosts staffs staff managers servers, baristas bussers busboys wait-staff food_runners female_bartenders attendants bouncers servers/bartenders staffers greeters waiters, runners bus_boys clerks female_servers chefs male_servers people_working ladies delivery_drivers bartenders, employees, bartenders/servers order_takers Hostesses Waitresses women_working employes Bartenders male_bartenders\n\nambiance atmosphere decor environment scenery interior_decor decore décor interior_design atmostphere atmospher ambiance, Ambiance overall_vibe interior vibe decoration atmosphere, atmoshpere layout Ambience setting atmoshere restaurant's_decor ambience, space_itself Atmosphere surroundings lighting atomsphere restaurant_itself atomosphere ambient decor, enviroment deco Vibe Environment venue_itself Decor contemporary_decor relaxed_atmosphere atmosphere/decor building_itself atmosphere; Setting interior_decoration modern_decor relaxing_atmosphere architecture\n\npricey expensive pricey, costly expensive, spendy pricy, bit_pricey overpriced kinda_pricey over_priced over-priced steep little_pricey slightly_overpriced expensive... bit_pricy expensive.. costly, ridiculously_overpriced spendy, little_pricy overpriced, over_priced, cheap fairly_priced decently_priced disappointing,_especially bit_pricey, steep, pricey! pricey. ridiculously_expensive little_pricey, tad_overpriced reasonably_priced pricey... pricy. kinda_pricy inexpensive WAY_overpriced bit_pricy, pricey- lil_pricey tad_pricey bit_spendy overrated grossly_overpriced pricier_side pricey_side,\n",
			"settings":
			{
				"buffer_size": 9656,
				"line_ending": "Unix",
				"name": "[(u 'foods,', 0.7954785823822021), (u 'dishes', 0."
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 400.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: List Packages"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"js",
				"Set Syntax: JavaScript"
			],
			[
				"package",
				"Package Control: List Packages"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"obj",
				"Set Syntax: Objective-C"
			],
			[
				"pk",
				"Package Control: Install Package"
			]
		],
		"width": 601.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/zhangjia/Projects/big_data_project",
		"/Users/zhangjia/Projects/big_data_project/big-data-project",
		"/Users/zhangjia/Projects/big_data_project/big-data-project/preprocessing",
		"/Users/zhangjia/Projects/big_data_project/data/csv"
	],
	"file_history":
	[
		"/Users/zhangjia/Projects/big_data_project/data/preprocessed_data/ratings.csv",
		"/Users/zhangjia/Projects/big_data_project/big-data-project/preprocessing/R_prime_vector.p",
		"/Users/zhangjia/Projects/big_data_project/big-data-project/preprocessing/extract_data.py",
		"/Users/zhangjia/Projects/big_data_project/big-data-project/preprocessing/json_to_csv.py",
		"/Users/zhangjia/Projects/big_data_project/big-data-project/test.py",
		"/Users/zhangjia/Projects/big_data_project/data/csv/rewrite_users.csv",
		"/Users/zhangjia/Projects/big_data_project/data/preprocessed_data/reviews.csv",
		"/Users/zhangjia/Projects/big_data_project/data/csv/users.csv",
		"/Users/zhangjia/Projects/big_data_project/data/csv/reviews.csv",
		"/Users/zhangjia/Projects/big_data_project/data/yelp_academic_dataset_business.json",
		"/Users/zhangjia/Projects/big_data_project/data/csv/restaurants.csv",
		"/Users/zhangjia/Projects/myjamsmaster/client/vendor/angular-ui-router.js",
		"/Users/zhangjia/Projects/myjamsmaster/client/js/services/gigcreate.js",
		"/Users/zhangjia/Projects/myjamsmaster/client/js/cronjobs/match.js",
		"/Users/zhangjia/Projects/myjamsmaster/package.json",
		"/Users/zhangjia/Projects/myjamsmaster/node_modules/node-cron/README.md",
		"/Users/zhangjia/Projects/myjamsmaster/server/server.js",
		"/Users/zhangjia/Projects/myjamsmaster/client/index.html",
		"/Users/zhangjia/Projects/myjamsmaster/server/boot/match.js",
		"/Users/zhangjia/Projects/myjamsmaster/client/rider.png",
		"/Users/zhangjia/Projects/myjamsmaster/client/js/app.js",
		"/Users/zhangjia/Projects/myjamsmaster/client/js/controllers/bandapprovecontrol.js",
		"/Users/zhangjia/Projects/myjamsmaster/client/js/controllers/user_profile_controller.js",
		"/Users/zhangjia/Projects/myjamsmaster/client/views/approve-bands.html",
		"/Users/zhangjia/Projects/myjamsmaster/client/js/controllers/venuedashcontrol.js",
		"/Users/zhangjia/Projects/myjamsmaster/client/views/user-profile.html",
		"/Users/zhangjia/Projects/myjamsmaster/client/views/createbandlist.html",
		"/Users/zhangjia/Projects/myjamsmaster/client/views/venue-basics.html",
		"/Users/zhangjia/Projects/myjamsmaster/client/views/blank-messages.html",
		"/Users/zhangjia/Projects/myjamsmaster/client/views/band-basics.html",
		"/Users/zhangjia/Projects/myjamsmaster/client/views/band-dashboard.html",
		"/Users/zhangjia/Projects/myjamsmaster/client/js/controllers/review.js",
		"/Users/zhangjia/Projects/myjamsmaster/server/datasources.json",
		"/Users/zhangjia/Projects/myjamsmaster/client/js/controllers/auth.js",
		"/Users/zhangjia/Projects/myjamsmaster/common/models/user-app.json",
		"/Users/zhangjia/Projects/myjamsmaster/server/config.json",
		"/Users/zhangjia/Projects/plt/p3/scanner.mll",
		"/Users/zhangjia/Projects/plt/p3/ast.mli",
		"/Users/zhangjia/Projects/plt/p1.ml",
		"/Users/zhangjia/Projects/plt/p2.mll",
		"/Users/zhangjia/Projects/plt/p3/calc.ml",
		"/Users/zhangjia/Projects/plt/p3/parser.mly",
		"/Users/zhangjia/Projects/plt/test.ml",
		"/Users/zhangjia/Projects/plt/test/cal.ml",
		"/Users/zhangjia/Projects/plt/test/parser.mly",
		"/Users/zhangjia/Projects/plt/test/lexer.mll",
		"/Users/zhangjia/Projects/plt/test/ast.mli",
		"/Users/zhangjia/Projects/plt/test/lexer.ml",
		"/Users/zhangjia/Projects/plt/test/parser.mli",
		"/Users/zhangjia/Projects/plt/test/parser.ml",
		"/Users/zhangjia/Projects/data-structure/dfs.py",
		"/Users/zhangjia/Projects/functional_programming/lab2.hs",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/entity/admin.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/admins/dap_view_admin.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/tools/serializers/models/tools.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/tools/serializers/tools_serializer.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/tests.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/entity/constants.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/entity/models.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/tools/views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/operation_time_managers/operation_time_managers.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/models/base.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/models/operating_calendar.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/models/dap_item.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/ocean_park_api_simulator/models.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/spika/models.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/watcher/models.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/zone/models.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/data_managers/park_model_data_managers.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/pflow_cms/settings.dev.jimmy.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/initial_data/dap_view.json",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/models/dap_view.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/scripts/reload_data.sh",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/static/activity/js/dap_view_change_list.js",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/admin.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/templates/admin/activity/dapview/change_list.html",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/initial_data/operating_calendar.json",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/initial_data/operating_information.json",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/initial_data/operating_normal_date.json",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/utils/time_utils.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/serializers/park_serializer.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/serializers/entity_serializer.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/serializers/activity_serializer.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/serializers/base_serializer.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/time_data/base.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/data_managers/base.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/last_update_time.txt",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/templates/admin/activity/operatingcalendar/change_list.html",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/templates/admin/activity/dapitem/change_list.html",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/custom_user/static/custom_user/js/change_list.js",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/static/activity/css/change_form.css",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/templates/admin/activity/operatingcalendar/charter_hours_change_form.html",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/watcher/views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/admin.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/tests.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/__init__.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/management/commands/update_api_data.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/pflow_cms/settings_common.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/migrations/0009_seasonalevent_entity_code.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/utils/utils.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/data_managers/entity_managers.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/models/base.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/views/base.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/custom_user/backends.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/models/entity_data.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/zone/views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/spika/views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/ocean_park_api_simulator/views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/entity/views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/custom_user/views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/views/entity_views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/tools/models/today_show.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/initial_data/entity.json",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/pflow_cms/settings.dev.ningbo.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/views/base.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/templates/admin/base.html",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/views/attraction_views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/views/seasonal_event_views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/operation_time_managers/__init__.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/tools/urls.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/db/db_bak.sqlite3",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/api_data/serializers/models/base.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/initial_data/dap_item.json",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/initial_data/daily_show.json",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/db/db.sqlite3",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/views/ride_views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/views/show_views.py",
		"/Users/zhangjia/Projects/pflow_cms/trunk/pflow_cms/activity/views/transportation_views.py"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 112.0,
		"where_history":
		[
			"/Users/zhangjia/Projects/myjamsmaster",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"print",
			"transpose",
			"m_partition",
			"m_blocks",
			"U_T",
			"matrix_multiply",
			"count",
			"line_list",
			"mat_m",
			"total_count",
			"m_blocks",
			"index",
			"build_sparse_matrix",
			"MSE",
			"mat_n",
			"mat_m",
			"m_partition",
			"U_T",
			"m_blocks",
			"mat",
			"csr_matrix(",
			"user",
			"data_num",
			"read_restaurants_data_into_dic",
			"viGPbkKGZPx3bzjEdkmZ8w",
			"print",
			"Di_8AmiLBwNRrE68bsaLMw",
			"read_users_data_into_dic",
			"in_path",
			"path",
			"csvfile",
			"rewrite_users",
			"rewrte_user_path",
			"0",
			"user_list",
			"fout_rating",
			"reviews_out_path",
			"ratings_out_path",
			"TQ1gOG_gsEF4iTE8M9juaA",
			"user_dic",
			"csv_file",
			"100",
			"review_text",
			"user_id",
			"user",
			"business_id",
			"restaurant_dic",
			"spamreader",
			"user",
			"restaurant_json_file_path",
			"restaurant_csv_file_path",
			"restaurant",
			"json_file_path",
			"csv_file_path",
			"line_value",
			"filterBandEventDate",
			"inq",
			"bandIds",
			"q.all",
			"findBandForGigevent",
			"fillGigeventWithBand",
			"\"Empty\"",
			"empty",
			"findme",
			"findBands",
			"filter",
			"Gigevent",
			"Bandevent",
			"cron",
			"createServer",
			"require",
			"TODO",
			"submitForm2",
			"apply",
			"submitForm2",
			"myFunction3",
			"Mybandslist",
			"putToBandlist",
			"findBands",
			"findme",
			"bandLogic",
			"participantids",
			"therest",
			"coorperatedBandNames",
			"\\",
			"coorperatedBandNames",
			"coo",
			"userApp",
			"UserApp",
			"showBand",
			"showNextBand",
			"band",
			"ApproveBandsController",
			"approve",
			"Mybandslist",
			"CreateBandListController",
			"createbandlist",
			"Create Bandslist",
			"scope",
			"bandname",
			"});\n",
			"venuename",
			"bandname",
			"userApp",
			"UserApp",
			"blank-messages",
			"BandDashboardController",
			"venues",
			"<<<<<",
			"CreateBandListController",
			"<<<<<<",
			"chatGroup",
			"myfunction2",
			"myfunc",
			"<<<<<<",
			"head",
			"<<<<<",
			"band list",
			"<<<<<",
			"<<<<<<<",
			"band",
			"coop",
			"<<<<<<",
			"band-basics",
			"coorperatedBandNames",
			"Past Events",
			"Congrats on Completing Your Event! How did it go?\n\n",
			"pastevent"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "preprocessing/col_filter.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10041,
						"regions":
						{
						},
						"selection":
						[
							[
								8539,
								8539
							]
						],
						"settings":
						{
							"auto_complete": false,
							"color_scheme": "Packages/User/Color Highlighter/themes/base16-eighties.dark.tmTheme",
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4407.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "big_data_project.sublime-project",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 85,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "preprocessing/get_uv.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3466,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/base16-eighties.dark.tmTheme",
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "preprocessing/extract_data.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5095,
						"regions":
						{
						},
						"selection":
						[
							[
								512,
								708
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/base16-eighties.dark.tmTheme",
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 101.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9656,
						"regions":
						{
						},
						"selection":
						[
							[
								6984,
								6984
							]
						],
						"settings":
						{
							"auto_name": "[(u 'foods,', 0.7954785823822021), (u 'dishes', 0.",
							"default_dir": "/Users/zhangjia/Projects/big_data_project",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 697.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.autopep8":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "big_data_project.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"approve-bands.html",
				"client/views/approve-bands.html"
			],
			[
				"createbandlist",
				"client/views/createbandlist.html"
			],
			[
				"blank-messages.html",
				"client/views/blank-messages.html"
			],
			[
				"band-",
				"client/views/band-basics.html"
			],
			[
				"band-dashboard.html",
				"client/views/band-dashboard.html"
			],
			[
				"venue-basics.html",
				"client/views/venue-basics.html"
			],
			[
				"banbasi",
				"client/views/band-basics.html"
			],
			[
				"user",
				"common/models/user-app.json"
			],
			[
				"admin",
				"trunk/pflow_cms/activity/admin.py"
			],
			[
				"mo",
				"trunk/pflow_cms/entity/models.py"
			],
			[
				"mod",
				"trunk/pflow_cms/entity/models.py"
			],
			[
				"setd",
				"trunk/pflow_cms/pflow_cms/settings.dev.jimmy.py"
			],
			[
				"operti",
				"trunk/pflow_cms/activity/operation_time_managers/operation_time_managers.py"
			],
			[
				"dapi",
				"trunk/pflow_cms/activity/models/dap_item.py"
			],
			[
				"oper",
				"trunk/pflow_cms/activity/models/operating_calendar.py"
			],
			[
				"operca",
				"trunk/pflow_cms/initial_data/operating_calendar.json"
			],
			[
				"ti",
				"trunk/pflow_cms/api_data/utils/time_utils.py"
			],
			[
				"basese",
				"trunk/pflow_cms/api_data/serializers/base_serializer.py"
			],
			[
				"timtu",
				"trunk/pflow_cms/api_data/utils/time_utils.py"
			],
			[
				"changli",
				"trunk/pflow_cms/activity/templates/admin/activity/dapview/change_list.html"
			],
			[
				"da",
				"trunk/pflow_cms/activity/models/dap_view.py"
			],
			[
				"dapv",
				"trunk/pflow_cms/initial_data/dap_view.json"
			],
			[
				"davda",
				"trunk/pflow_cms/activity/admins/dap_view_admin.py"
			],
			[
				"setde",
				"trunk/pflow_cms/pflow_cms/settings.dev.jimmy.py"
			],
			[
				"ba",
				"trunk/pflow_cms/api_data/data_managers/base.py"
			],
			[
				"base",
				"trunk/pflow_cms/time_data/base.py"
			],
			[
				"enman",
				"trunk/pflow_cms/api_data/data_managers/entity_managers.py"
			],
			[
				"uti",
				"trunk/pflow_cms/api_data/utils/utils.py"
			],
			[
				"view",
				"trunk/pflow_cms/tools/views.py"
			],
			[
				"updatea",
				"trunk/pflow_cms/api_data/management/commands/update_api_data.py"
			],
			[
				"entiv",
				"trunk/pflow_cms/api_data/views/entity_views.py"
			],
			[
				"enda",
				"trunk/pflow_cms/api_data/models/entity_data.py"
			],
			[
				"setcom",
				"trunk/pflow_cms/pflow_cms/settings_common.py"
			],
			[
				"setni",
				"trunk/pflow_cms/pflow_cms/settings.dev.ningbo.py"
			],
			[
				"entvi",
				"trunk/pflow_cms/api_data/views/entity_views.py"
			],
			[
				"util",
				"trunk/pflow_cms/api_data/utils/utils.py"
			],
			[
				"setji",
				"trunk/pflow_cms/pflow_cms/settings.dev.jimmy.py"
			],
			[
				"setco",
				"trunk/pflow_cms/pflow_cms/settings_common.py"
			],
			[
				"settcom",
				"trunk/pflow_cms/pflow_cms/settings_common.py"
			],
			[
				"setj",
				"trunk/pflow_cms/pflow_cms/settings.dev.jimmy.py"
			],
			[
				"setcon",
				"trunk/pflow_cms/pflow_cms/settings_common.py"
			],
			[
				"cons",
				"trunk/pflow_cms/entity/constants.py"
			],
			[
				"maincs",
				"nova/static/css/main.css"
			],
			[
				"main",
				"static/css/main.css"
			],
			[
				"breadcrumb",
				"nova/templates/pages/menus/breadcrumb.html"
			],
			[
				"ad",
				"car_cms/trunk/trades/admin.py"
			],
			[
				"adm",
				"car_cms/trunk/car_user/admin.py"
			],
			[
				"mode",
				"car_cms/trunk/car_user/models.py"
			],
			[
				"const",
				"car_cms/trunk/trades/trades_models/constant.py"
			],
			[
				"resou",
				"car_cms/trunk/car_user/api/resources.py"
			],
			[
				"sms",
				"car_cms/trunk/car_cms/utils/sms_utils.py"
			],
			[
				"api",
				"car_cms/trunk/trades/api.py"
			],
			[
				"pygenca",
				"car_cms/trunk/script/pygen_category.py"
			],
			[
				"pyg",
				"car_cms/trunk/script/pygen_product.py"
			],
			[
				"set",
				"car_cms/trunk/car_cms/settings_common.py"
			],
			[
				"insuacomm",
				"boc_insurance_cms/views/insurance_views_common.py"
			],
			[
				"echinaextend",
				"boc_insurance_cms/templates/mobiles/e_china_express_insurance/e_china_express_extend_insurance.html"
			],
			[
				"echinaexconfi",
				"boc_insurance_cms/templates/mobiles/e_china_express_insurance/e_china_express_confirm_filled_form.html"
			],
			[
				"echinabuyer",
				"boc_insurance_cms/templates/mobiles/e_china_express_insurance/e_china_express_insurance_buyer_info.html"
			],
			[
				"buy",
				"boc_insurance_cms/templates/buy_insurance.html"
			],
			[
				"echinaemai",
				"boc_insurance_cms/templates/emails/buy_e_china_express_insurance_email.html"
			],
			[
				"insurinfo",
				"boc_insurance_cms/templates/mobiles/buy_insurance_info.html"
			],
			[
				"confi",
				"boc_insurance_cms/templates/mobiles/confirm_filled_form.html"
			],
			[
				"buyerin",
				"boc_insurance_cms/templates/mobiles/buyer_info.html"
			],
			[
				"viewcom",
				"boc_insurance_cms/views/insurance_views_common.py"
			],
			[
				"echinabuy",
				"boc_insurance_cms/templates/mobiles/e_china_express_insurance/e_china_express_buy_insurance.html"
			],
			[
				"buyin",
				"boc_insurance_cms/templates/mobiles/buy_insurance.html"
			],
			[
				"echianemai",
				"boc_insurance_cms/templates/emails/extend_e_china_express_insurance_email.html"
			],
			[
				"echinaexbuyer",
				"boc_insurance_cms/templates/e_china_express_insurance/e_china_express_insurance_buyer_info.html"
			],
			[
				"echinabuycom",
				"boc_insurance_cms/templates/mobiles/e_china_express_insurance/e_china_express_buy_insurance_complete.html"
			],
			[
				"echinbuy",
				"boc_insurance_cms/templates/e_china_express_insurance/e_china_express_buy_insurance.html"
			],
			[
				"adver",
				"boc_insurance_cms/views/advertisement_views.py"
			],
			[
				"url",
				"boc_insurance_cms/urls.py"
			],
			[
				"insurpr",
				"boc_insurance_cms/models/insurance_profile.py"
			],
			[
				"insu",
				"boc_insurance_cms/models/insurance.py"
			],
			[
				"model",
				"boc_insurance_cms/models/modelform.py"
			],
			[
				"adv",
				"boc_insurance_cms/views/advertisement_views.py"
			],
			[
				"echinainvew",
				"boc_insurance_cms/views/e_china_express_insurance_views.py"
			],
			[
				"insview",
				"boc_insurance_cms/views/insurance_views.py"
			],
			[
				"settincom",
				"boc_insurance_cms/settings_common.py"
			],
			[
				"echininsview",
				"boc_insurance_cms/views/e_china_express_insurance_views.py"
			],
			[
				"ins",
				"boc_insurance_cms/models/insurance.py"
			],
			[
				"dow",
				"website/views/download_image_views.py"
			],
			[
				"settpro",
				"boc_insurance_cms/settings.prod.py"
			],
			[
				"settiua",
				"boc_insurance_cms/settings.uat.py"
			],
			[
				"news",
				"boc_insurance_cms/models/news.py"
			],
			[
				"adtismen",
				"boc_insurance_cms/views/advertisement_views.py"
			],
			[
				"insuview",
				"boc_insurance_cms/views/insurance_views.py"
			],
			[
				"buyinsu",
				"boc_insurance_cms/templates/buy_insurance.html"
			],
			[
				"echinabuyins",
				"boc_insurance_cms/templates/e_china_express_insurance/e_china_express_buy_insurance.html"
			],
			[
				"insura",
				"boc_insurance_cms/models/insurance.py"
			],
			[
				"prod",
				"boc_insurance_cms/models/product.py"
			],
			[
				"echinainscons",
				"boc_insurance_cms/models/e_china_express_insurance/e_china_express_constant.py"
			],
			[
				"insucom",
				"boc_insurance_cms/views/insurance_views_common.py"
			],
			[
				"echinaurl",
				"boc_insurance_cms/e_china_express_insurance_urls.py"
			],
			[
				"echinabuyinsurance",
				"boc_insurance_cms/templates/e_china_express_insurance/e_china_express_buy_insurance.html"
			],
			[
				"echinaconf",
				"boc_insurance_cms/templates/mobiles/e_china_express_insurance/e_china_express_confirm_filled_form.html"
			],
			[
				"echinaconfi",
				"boc_insurance_cms/templates/e_china_express_insurance/e_china_express_confirm_filled_form.html"
			],
			[
				"echinabyer",
				"boc_insurance_cms/templates/e_china_express_insurance/e_china_express_insurance_buyer_info.html"
			],
			[
				"echinapro",
				"boc_insurance_cms/models/e_china_express_insurance/e_china_express_insurance_profile.py"
			],
			[
				"echinpro",
				"boc_insurance_cms/models/e_china_express_insurance/e_china_express_insurance_profile.py"
			],
			[
				"expovi",
				"boc_insurance_cms/views/export_views.py"
			],
			[
				"settingsco",
				"boc_insurance_cms/settings_common.py"
			],
			[
				"pdf",
				"boc_insurance_cms/utils/pdf_utils.py"
			],
			[
				"emai",
				"boc_insurance_cms/utils/email_utils.py"
			],
			[
				"ex",
				"process_excel/export_excel.php"
			],
			[
				"econs",
				"boc_insurance_cms/models/e_china_express_insurance/e_china_express_constant.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 400.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 900.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 263.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
